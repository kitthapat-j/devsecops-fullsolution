name: DevSecOps CI/CD Pipeline to Azure

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_and_scan:
    name: üõ°Ô∏è Scan & Quality Gate
    permissions:
      contents: read  # ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏≠‡πà‡∏≤‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠ Checkout ‡πÇ‡∏Ñ‡πâ‡∏î
      packages: write
      pull-requests: write # ‡∏≠‡∏≤‡∏à‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö SonarQube Decoration
      actions: read  # ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç: ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á Action
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies
        run: npm install --prefix app
        
      # 1. ‡∏£‡∏±‡∏ô SonarQube Scan
      - name: SonarQube Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          npm run sonar --prefix app -- \
            -Dsonar.projectKey=kitthapat-j_devsecops-fullsolution \
            -Dsonar.organization=kitthapat-j \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }}

      # 2. Security Gate: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Quality Gate (‡∏à‡∏∞ FAIL)
      - name: Check SonarQube Quality Gate
        uses: SonarSource/sonarcloud-quality-gate-action@v1.2.0